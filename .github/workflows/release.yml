name: Semantic Release

on:
  push:
    branches:
      - main

jobs:
  generate-exe:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install -e .

      - name: PyInstaller Windows
        uses: JackMcKew/pyinstaller-action-windows@main
        with:
          path: src

      - uses: actions/upload-artifact@v2
        with:
          name: pattern_gen
          path: src/dist/windows

  release:
    runs-on: ubuntu-latest
    needs: [generate-exe]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Python Semantic Release
        uses: relekang/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pypi_token: ${{ secrets.PYPI_TOKEN }}

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: pattern_gen

      - name: runs ls
        run: ls ${{ github.workspace }}

      - name: Get Latest Release
        uses: octokit/request-action@v2.x
        id: get_latest_release
        with:
          route: GET /repos/:repository/releases/latest
          repository: ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: get upload url
        id: get_upload_url
        run: |
          url=$(echo "$response" | jq -r '.upload_url')
          echo "::set-output name=url::$url"
        env:
          response: ${{ steps.get_latest_release.outputs.data }}
      - name: Upload a Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # The URL for uploading assets to the release
          upload_url: ${{steps.get_upload_url.outputs.url}}
          # The path to the asset you want to upload
          asset_path: ${{ github.workspace }}/pattern_gen.exe
          # The name of the asset you want to upload
          asset_name: pattern_gen.exe
          # The content-type of the asset you want to upload. See the supported Media Types here: https://www.iana.org/assignments/media-types/media-types.xhtml for more information
          asset_content_type: application/vnd.microsoft.portable-executable
